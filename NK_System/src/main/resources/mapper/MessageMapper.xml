<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.Mapper.MessageMapper">
   <sql id="selectFiles">
       id,from_id,to_id,conversation_id,content,
       status,create_time
   </sql>

    <sql id="insertFiles">
       from_id,to_id,conversation_id,content,
       status,create_time
   </sql>



 <!-- 这是要查询用户的每个会话(当前用户会和不同的人对话)的最新的一条消息    -->
    <select id="selectConversation" resultType="Message" >
         select <include refid="selectFiles"></include>
            from message
                where id in (
                select max(id) from message
                where status !=2
                and from_id !=1
                and (from_id=#{userId} or to_id=#{userId})
                group by conversation_id
            )
        order by id desc
        limit #{start},#{limit}

    </select>

    <select id="selectConvsersationCount" resultType="int" >
       select count(m.maxid) from (
          select max(id) as maxid  from message
                where status !=2
                and from_id !=1
                and (from_id=#{userId} or to_id=#{userId})
                group by conversation_id
       ) as m

    </select>

    <select id="selectLetter" resultType="Message">
         select <include refid="selectFiles"></include>
         from message
         where status !=2
         and from_id !=1
         and conversation_id=#{conversationId}
         order by id desc
         limit #{start},#{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
       select count(id)
       from message
       where status !=2
       and from_id !=1
       and conversation_id=#{conversationId}

    </select>

    <select id="selectLetterUnreader" resultType="int">
        select count(id)
        from message
        where status=0
        and from_id !=1
        and to_id =#{userId}
        <if test="conversationId!=null">
            and conversation_id=#{conversationId}
        </if>

    </select>
<!-- id是自增长主键，可以利用keyProperty这个属性将自增长的主键绑定实体类的某个属性==>id-->
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
            insert into message(<include refid="insertFiles"></include>)
            values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateMessageStatus" >
        update message set status=#{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <select id="selectLastNotice" resultType="Message">
        select <include refid="selectFiles"></include>
        from message
        where id in (
          select max(id) from message
          where status !=2
          and from_id=1
          and to_id=#{userId}
          and conversation_id=#{topic}
        )
    </select>


    <select id="selectNOticeCount" resultType="int" >
        select count(id) from message
          where status !=2
          and from_id=1
          and to_id=#{userId}
          and conversation_id=#{topic}
    </select>

    <select id="selectUnreaderNoticeCount" resultType="int">
        select count(id) from message
          where status =0
          and from_id=1
          and to_id=#{userId}
          <if test="topic!=null">
            and conversation_id=#{topic}
          </if>
    </select>


    <select id="selectNotices" resultType="Message">
        select <include refid="selectFiles"></include>
        from message
        where status !=2
        and from_id=1
        and to_id=#{userId}
        and  conversation_id=#{topic}
        order by create_time desc
        limit #{start} ,#{limit}
    </select>

</mapper>